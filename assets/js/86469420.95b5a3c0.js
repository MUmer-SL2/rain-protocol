"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2493],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=i,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9160:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={},l=void 0,d={unversionedId:"api/trust/Trust",id:"version-v0.0.12/api/trust/Trust",isDocsHomePage:!1,title:"Trust",description:"Coordinates the mediation and distribution of tokens",source:"@site/versioned_docs/version-v0.0.12/api/trust/Trust.md",sourceDirName:"api/trust",slug:"/api/trust/Trust",permalink:"/rain-protocol/v0.0.12/api/trust/Trust",tags:[],version:"v0.0.12",frontMatter:{},sidebar:"version-v0.0.12/tutorialSidebar",previous:{title:"VerifyTier",permalink:"/rain-protocol/v0.0.12/api/tier/VerifyTier"},next:{title:"TrustFactory",permalink:"/rain-protocol/v0.0.12/api/trust/TrustFactory"}},c=[{value:"Details",id:"details",children:[]},{value:"Variables",id:"variables",children:[{value:"<code>address</code> <code>creator</code>",id:"address-creator",children:[]},{value:"<code>uint256</code> <code>minimumCreatorRaise</code>",id:"uint256-minimumcreatorraise",children:[]},{value:"<code>address</code> <code>seeder</code>",id:"address-seeder",children:[]},{value:"<code>uint256</code> <code>seederFee</code>",id:"uint256-seederfee",children:[]},{value:"<code>uint16</code> <code>seederUnits</code>",id:"uint16-seederunits",children:[]},{value:"<code>uint16</code> <code>seederCooldownDuration</code>",id:"uint16-seedercooldownduration",children:[]},{value:"<code>uint256</code> <code>redeemInit</code>",id:"uint256-redeeminit",children:[]},{value:"<code>contract SeedERC20Factory</code> <code>seedERC20Factory</code>",id:"contract-seederc20factory-seederc20factory",children:[]},{value:"<code>uint256</code> <code>finalBalance</code>",id:"uint256-finalbalance",children:[]},{value:"<code>uint256</code> <code>successBalance</code>",id:"uint256-successbalance",children:[]},{value:"<code>contract RedeemableERC20</code> <code>token</code>",id:"contract-redeemableerc20-token",children:[]},{value:"<code>contract RedeemableERC20Pool</code> <code>pool</code>",id:"contract-redeemableerc20pool-pool",children:[]}]},{value:"Functions",id:"functions",children:[{value:"<code>constructor(struct TrustConfig config_, struct TrustRedeemableERC20Config trustRedeemableERC20Config_, struct TrustRedeemableERC20PoolConfig trustRedeemableERC20PoolConfig_)</code> (public)",id:"constructorstruct-trustconfig-config_-struct-trustredeemableerc20config-trustredeemableerc20config_-struct-trustredeemableerc20poolconfig-trustredeemableerc20poolconfig_-public",children:[]},{value:"<code>getContracts() \u2192 struct TrustContracts</code> (external)",id:"getcontracts--struct-trustcontracts-external",children:[]},{value:"<code>getTrustConfig() \u2192 struct TrustConfig</code> (external)",id:"gettrustconfig--struct-trustconfig-external",children:[]},{value:"<code>getDistributionProgress() \u2192 struct DistributionProgress</code> (external)",id:"getdistributionprogress--struct-distributionprogress-external",children:[]},{value:"<code>getDistributionStatus() \u2192 enum DistributionStatus</code> (public)",id:"getdistributionstatus--enum-distributionstatus-public",children:[]},{value:"<code>anonEndDistribution()</code> (external)",id:"anonenddistribution-external",children:[]}]}],u={toc:c};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Coordinates the mediation and distribution of tokens\nbetween stakeholders."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust")," contract is responsible for configuring the\n",(0,a.kt)("inlineCode",{parentName:"p"},"RedeemableERC20")," token, ",(0,a.kt)("inlineCode",{parentName:"p"},"RedeemableERC20Pool")," Balancer wrapper\nand the ",(0,a.kt)("inlineCode",{parentName:"p"},"SeedERC20")," contract."),(0,a.kt)("p",null,"Internally the ",(0,a.kt)("inlineCode",{parentName:"p"},"TrustFactory")," calls several admin/owner only\nfunctions on its children and these may impose additional\nrestrictions such as ",(0,a.kt)("inlineCode",{parentName:"p"},"Phased")," limits."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust")," builds and references ",(0,a.kt)("inlineCode",{parentName:"p"},"RedeemableERC20"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"RedeemableERC20Pool")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"SeedERC20")," contracts internally and\nmanages all access-control functionality."),(0,a.kt)("p",null,"The major functions of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust")," contract, apart from building\nand configuring the other contracts, is to start and end the\nfundraising event, and mediate the distribution of funds to the\ncorrect stakeholders:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"On ",(0,a.kt)("inlineCode",{parentName:"li"},"Trust")," construction, all minted ",(0,a.kt)("inlineCode",{parentName:"li"},"RedeemableERC20")," tokens\nare sent to the ",(0,a.kt)("inlineCode",{parentName:"li"},"RedeemableERC20Pool")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"anonStartDistribution")," can be called by anyone to begin the\nDutch Auction. This will revert if this is called before seeder reserve\nfunds are available on the ",(0,a.kt)("inlineCode",{parentName:"li"},"Trust"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"anonEndDistribution")," can be called by anyone (only when\n",(0,a.kt)("inlineCode",{parentName:"li"},"RedeemableERC20Pool")," is in ",(0,a.kt)("inlineCode",{parentName:"li"},"Phase.TWO"),") to end the Dutch Auction\nand distribute funds to the correct stakeholders, depending on\nwhether or not the auction met the fundraising target.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"On successful raise",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"seed funds are returned to ",(0,a.kt)("inlineCode",{parentName:"li"},"seeder")," address along with\nadditional ",(0,a.kt)("inlineCode",{parentName:"li"},"seederFee")," if configured"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"redeemInit")," is sent to the ",(0,a.kt)("inlineCode",{parentName:"li"},"redeemableERC20")," address, to back\nredemptions"),(0,a.kt)("li",{parentName:"ul"},"the ",(0,a.kt)("inlineCode",{parentName:"li"},"creator")," gets the remaining balance, which should\nequal or exceed ",(0,a.kt)("inlineCode",{parentName:"li"},"minimumCreatorRaise")))),(0,a.kt)("li",{parentName:"ul"},"On failed raise",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"seed funds are returned to ",(0,a.kt)("inlineCode",{parentName:"li"},"seeder")," address"),(0,a.kt)("li",{parentName:"ul"},"the remaining balance is sent to the ",(0,a.kt)("inlineCode",{parentName:"li"},"redeemableERC20")," address, to\nback redemptions"),(0,a.kt)("li",{parentName:"ul"},"the ",(0,a.kt)("inlineCode",{parentName:"li"},"creator")," gets nothing")))))),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("p",null,"Mediates stakeholders and creates internal Balancer pools and tokens\nfor a distribution."),(0,a.kt)("p",null,"The goals of a distribution:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Mint and distribute a ",(0,a.kt)("inlineCode",{parentName:"li"},"RedeemableERC20")," as fairly as possible,\nprioritising true fans of a creator."),(0,a.kt)("li",{parentName:"ul"},"Raise a minimum reserve so that a creator can deliver value to fans."),(0,a.kt)("li",{parentName:"ul"},"Provide a safe space through membership style filters to enhance\nexclusivity for fans."),(0,a.kt)("li",{parentName:"ul"},"Ensure that anyone who seeds the raise (not fans) by risking and\nproviding capital is compensated.")),(0,a.kt)("p",null,"Stakeholders:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Creator: Have a project of interest to their fans"),(0,a.kt)("li",{parentName:"ul"},"Fans: Will purchase project-specific tokens to receive future rewards\nfrom the creator"),(0,a.kt)("li",{parentName:"ul"},"Seeder(s): Provide initial reserve assets to seed a Balancer trading pool"),(0,a.kt)("li",{parentName:"ul"},"Deployer: Configures and deploys the ",(0,a.kt)("inlineCode",{parentName:"li"},"Trust")," contract")),(0,a.kt)("p",null,"The creator is nominated to receive reserve assets on a successful\ndistribution. The creator must complete the project and fans receive\nrewards. There is no on-chain mechanism to hold the creator accountable to\nthe project completion. Requires a high degree of trust between creator and\ntheir fans."),(0,a.kt)("p",null,'Fans are willing to trust and provide funds to a creator to complete a\nproject. Fans likely expect some kind of reward or "perks" from the\ncreator, such as NFTs, exclusive events, etc.\nThe distributed tokens are untransferable after trading ends and merely act\nas records for who should receive rewards.'),(0,a.kt)("p",null,"Seeders add the initial reserve asset to the Balancer pool to start the\nautomated market maker (AMM).\nIdeally this would not be needed at all.\nFuture versions of ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust")," may include a bespoke distribution mechanism\nrather than Balancer contracts. Currently it is required by Balancer so the\nseeder provides some reserve and receives a fee on successful distribution.\nIf the distribution fails the seeder is returned their initial reserve\nassets. The seeder is expected to promote and mentor the creator in\nnon-financial ways."),(0,a.kt)("p",null,"The deployer has no specific priviledge or admin access once the ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust")," is\ndeployed. They provide the configuration, including nominating\ncreator/seeder, and pay gas but that is all.\nThe deployer defines the conditions under which the distribution is\nsuccessful. The seeder/creator could also act as the deployer."),(0,a.kt)("p",null,"Importantly the ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust")," contract is the owner/admin of the contracts it\ncreates. The ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust")," never transfers ownership so it directly controls all\ninternal workflows. No stakeholder, even the deployer or creator, can act\nas owner of the internals."),(0,a.kt)("h2",{id:"variables"},"Variables"),(0,a.kt)("h3",{id:"address-creator"},(0,a.kt)("inlineCode",{parentName:"h3"},"address")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"creator")),(0,a.kt)("h3",{id:"uint256-minimumcreatorraise"},(0,a.kt)("inlineCode",{parentName:"h3"},"uint256")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"minimumCreatorRaise")),(0,a.kt)("h3",{id:"address-seeder"},(0,a.kt)("inlineCode",{parentName:"h3"},"address")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"seeder")),(0,a.kt)("h3",{id:"uint256-seederfee"},(0,a.kt)("inlineCode",{parentName:"h3"},"uint256")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"seederFee")),(0,a.kt)("h3",{id:"uint16-seederunits"},(0,a.kt)("inlineCode",{parentName:"h3"},"uint16")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"seederUnits")),(0,a.kt)("h3",{id:"uint16-seedercooldownduration"},(0,a.kt)("inlineCode",{parentName:"h3"},"uint16")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"seederCooldownDuration")),(0,a.kt)("h3",{id:"uint256-redeeminit"},(0,a.kt)("inlineCode",{parentName:"h3"},"uint256")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"redeemInit")),(0,a.kt)("h3",{id:"contract-seederc20factory-seederc20factory"},(0,a.kt)("inlineCode",{parentName:"h3"},"contract SeedERC20Factory")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"seedERC20Factory")),(0,a.kt)("h3",{id:"uint256-finalbalance"},(0,a.kt)("inlineCode",{parentName:"h3"},"uint256")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"finalBalance")),(0,a.kt)("h3",{id:"uint256-successbalance"},(0,a.kt)("inlineCode",{parentName:"h3"},"uint256")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"successBalance")),(0,a.kt)("h3",{id:"contract-redeemableerc20-token"},(0,a.kt)("inlineCode",{parentName:"h3"},"contract RedeemableERC20")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"token")),(0,a.kt)("h3",{id:"contract-redeemableerc20pool-pool"},(0,a.kt)("inlineCode",{parentName:"h3"},"contract RedeemableERC20Pool")," ",(0,a.kt)("inlineCode",{parentName:"h3"},"pool")),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("h3",{id:"constructorstruct-trustconfig-config_-struct-trustredeemableerc20config-trustredeemableerc20config_-struct-trustredeemableerc20poolconfig-trustredeemableerc20poolconfig_-public"},(0,a.kt)("inlineCode",{parentName:"h3"},"constructor(struct TrustConfig config_, struct TrustRedeemableERC20Config trustRedeemableERC20Config_, struct TrustRedeemableERC20PoolConfig trustRedeemableERC20PoolConfig_)")," (public)"),(0,a.kt)("p",null,"Sanity checks configuration.\nCreates the ",(0,a.kt)("inlineCode",{parentName:"p"},"RedeemableERC20")," contract and mints the redeemable ERC20\ntoken.\nCreates the ",(0,a.kt)("inlineCode",{parentName:"p"},"RedeemableERC20Pool")," contract.\n(optional) Creates the ",(0,a.kt)("inlineCode",{parentName:"p"},"SeedERC20")," contract. Pass a non-zero address to\nbypass this.\nAdds the Balancer pool contracts to the token sender/receiver lists as\nneeded.\nAdds the Balancer pool reserve asset as the first redeemable on the\n",(0,a.kt)("inlineCode",{parentName:"p"},"RedeemableERC20")," contract."),(0,a.kt)("p",null,"Note on slither:\nSlither detects a benign reentrancy in this constructor.\nHowever reentrancy is not possible in a contract constructor.\nFurther discussion with the slither team:\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/crytic/slither/issues/887"},"https://github.com/crytic/slither/issues/887")),(0,a.kt)("h3",{id:"getcontracts--struct-trustcontracts-external"},(0,a.kt)("inlineCode",{parentName:"h3"},"getContracts() \u2192 struct TrustContracts")," (external)"),(0,a.kt)("p",null,"Accessor for the ",(0,a.kt)("inlineCode",{parentName:"p"},"TrustContracts")," of this ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust"),"."),(0,a.kt)("h3",{id:"gettrustconfig--struct-trustconfig-external"},(0,a.kt)("inlineCode",{parentName:"h3"},"getTrustConfig() \u2192 struct TrustConfig")," (external)"),(0,a.kt)("p",null,"Accessor for the ",(0,a.kt)("inlineCode",{parentName:"p"},"TrustConfig")," of this ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust"),"."),(0,a.kt)("h3",{id:"getdistributionprogress--struct-distributionprogress-external"},(0,a.kt)("inlineCode",{parentName:"h3"},"getDistributionProgress() \u2192 struct DistributionProgress")," (external)"),(0,a.kt)("p",null,"Accessor for the ",(0,a.kt)("inlineCode",{parentName:"p"},"DistributionProgress")," of this ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust"),"."),(0,a.kt)("h3",{id:"getdistributionstatus--enum-distributionstatus-public"},(0,a.kt)("inlineCode",{parentName:"h3"},"getDistributionStatus() \u2192 enum DistributionStatus")," (public)"),(0,a.kt)("p",null,"Accessor for the ",(0,a.kt)("inlineCode",{parentName:"p"},"DistributionStatus")," of this ",(0,a.kt)("inlineCode",{parentName:"p"},"Trust"),"."),(0,a.kt)("h3",{id:"anonenddistribution-external"},(0,a.kt)("inlineCode",{parentName:"h3"},"anonEndDistribution()")," (external)"),(0,a.kt)("p",null,"Anyone can end the distribution.\nThe requirement is that the ",(0,a.kt)("inlineCode",{parentName:"p"},"minimumTradingDuration")," has elapsed.\nIf the ",(0,a.kt)("inlineCode",{parentName:"p"},"successBalance")," is reached then the creator receives the raise\nand seeder earns a fee.\nElse the initial reserve is refunded to the seeder and sale proceeds\nrolled forward to token holders (not the creator)."))}p.isMDXComponent=!0}}]);